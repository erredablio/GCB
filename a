# Documentação Projeto OCI

#documentacao #OCI #linux #docker #sankhya 

## Introdução
Essa documentação tem como objeitvo explicar as etapas do projeto Sankhya OCI, a parte operacional de como configurar cada etapa do projeto e também os ganhos no gerenciamento das aplicações Sankhya Produção referente as empresas que fazem parte do grupo Ramada.

## Preparação Ambiente
### Instalação Docker
Para conseguirmos subir um base Sankhya em Docker, precisamos antes instalar o Docker e o Docker Compose na máquina host.

*O que é Docker e Docker Compose?*
*[[Docker e Docker Compose#O que é Docker e Docker Compose?]]*


### Instalação Docker e Docker Compose (RHEL, OL, CentOS)
#### Docker
[Instalação Docker RHEL, OL, CentOS](https://docs.docker.com/engine/install/centos/)

1) Configuração do repositório
```bash
	sudo yum install -y yum-utils
	sudo yum-config-manager \
	    --add-repo \
	    https://download.docker.com/linux/centos/docker-ce.repo
```
1)  Instalação Docker
```bash
	sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
```
3)  Start Docker
```bash
	sudo systemctl start docker
```
4)  Verificando se o Docker foi instalado corretamente
```bash
	sudo docker run hello-world   
```

#### Docker Compose
[Instalação Docker Compose](https://docs.docker.com/compose/install/linux/)
1) Instalação Docker Compose
```bash
	sudo yum update
	sudo yum install docker-compose-plugin
```
2) Verificando versão Docker Compose
```bash
	docker compose version
```

### Criptografia de senha
#### Instalação JAVA e baixando o Wildfly
1) Instale o pacote JAVA
```bash
	yum install java
```
2) Baixe o Wildfly e realize a extração. Nesse exemplo, usaremos a versão modificada pela Sankhya. (COLOCAR COMANDO DE EXTRAÇÃO)
```bash
	wget https://grfetvhg7pdl.compat.objectstorage.sa-saopaulo-1.oraclecloud.com/downloads-sankhya-tools/Wildfly_11.0_Sankhya_mod_06.zip
	unzip unzip Wildfly_11.0_Sankhya_mod_06.zip
```
#### Comando para criptografia
1) Para realizar a criptografia, basta alterar o caminho /Pasta/Destino/WildFly para a pasta onde foi extraído o WildFly e "Defina Sua Senha" pela senha desejada sem aspas.
```bash
	# Aponte para o caminho onde a pasta do WildFly foi extraída
	export JBOSS_HOME=/Pasta/Destino/WildFly

	export CLASSPATH=${JBOSS_HOME}/modules/system/layers/base/org/picketbox/main/picketbox-5.0.2.Final.jar:${JBOSS_HOME}/modules/system/layers/base/org/jboss/logging/main/jboss-logging-3.3.1.Final.jar:$CLASSPATH

	java  org.picketbox.datasource.security.SecureIdentityLoginModule "Defina Sua Senha"
```
### Subindo aplicação Sankhya
#### Baixando os arquivos
1) Faça o download dos arquivos Docker Sankhya que estão no GitHub https://github.com/FerragensRamada/docker_sankhya e mova para o servidor.
2) Mova os files que estão no link http://10.21.0.191:8080/ para a estrutura abaixo.
	```
	◉ aplicacao-sankhya-NOMEBASE
	|_ ◉ files
		|_ ◉ gerenciador_de_pacotes
				|_ mge-ds.xml
				|_ pkgmgr_snk_unix_x64_2_3b85.tar.gz
				|_ standalone.xml
			◉ jdk
				|_ jdk-8u231-linux-x64.tar.gz
			◉ license
				|_ LICENSE.DAT
			◉ pkgs
				|_ sankhya-w_4.15b242.pkg
			◉ sh
				|_ start.sh
			◉ wildfly
				|_ Wildfly_11.0_Sankhya_mod_06.zip

	◉ services-sankhya-NOMEBASE
	|_ ◉ files
			◉ jdk
				|_ jdk-8u231-linux-x64.tar.gz
			◉ license
				|_ LICENSE.DAT
			◉ sanesocial
				|_ sanesocial_unixx64_Sankhya_3_1b251.tar.gz
			◉ sannfe
				|_ SanNFe_unixx64_Sankhya_4_9b555.tar.gz
			◉ sas
				|_ SAS_3_1b16_Sankhya_unixx64.tar.gz
				|_ sas-config

	```
	OBS: 
		Ao fazer o download dos arquivos no GitHub, os arquivos virão com um exemplo de estrutura.

#### Configurações os docker-compose.yml
1) docker-compose.yml Aplicação

![[Pasted image 20230524135628.png]]

2) docker-compose.yml Serviços
![[Pasted image 20230524140150.png]]

OBS: 
	Alterar onde está escrito NOMEBASE para o nome da base que está sendo configurada.
	Alterar as portas onde as aplicações irão rodar.

#### Configuração .env
1) Para configurar o .env, basta seguir as intruções que estão no próprio arquivo.

![[Pasted image 20230524140526.png]]

#### Comandos para subir a aplicação
Após todas essas configuração iniciais, estamos prontos para subir as aplicações.

1) Movendo o .env para a mesma pasta que está o docker-compose.yml da aplicação
	```bash
		mv /Origem/Do/.env /Pasta/Aonde/Esta/o/Docker_Compose
	```
2) Buildando o docker-compose.yml da aplicação
	```bash
		docker compose build
	```
3) Subindo o container da aplicação.
	```bash
		docker compose up -d
	```
4) Movendo o .env para a mesma pasta que está o docker-compose.yml dos serviços
	```bash
		mv /Origem/Do/.env /Pasta/Aonde/Esta/o/Docker_Compose
	```
5) Buildando o docker-compose.yml dos serviços.
	```bash
		docker compose build
	```
6) Subindo o container dos serviços.
	```bash
		docker compose up -d
	```
